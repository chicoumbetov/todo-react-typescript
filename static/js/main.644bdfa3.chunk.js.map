{"version":3,"sources":["AddTodoForm.tsx","TodoListItem.tsx","TodoList.tsx","App.tsx","index.tsx"],"names":["AddTodoForm","addTodo","React","useState","newTodo","setNewTodo","type","value","onChange","e","target","className","onClick","preventDefault","TodoListItem","todo","toggleTodo","complete","undefined","checked","text","TodoList","todos","map","initialTodos","App","setTodos","selectedTodo","newTodos","trim","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAOaA,G,MAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,QAA+B,EAE1BC,IAAMC,SAAS,IAFW,mBAEjDC,EAFiD,KAExCC,EAFwC,KAaxD,OACI,iCACI,uBAAOC,KAAK,OACLC,MAAOH,EACPI,SAbM,SAACC,GAClBJ,EAAWI,EAAEC,OAAOH,UAehB,wBAAQI,UAAU,MAAML,KAAK,SAASM,QAXzB,SAACH,GAClBA,EAAEI,iBACFZ,EAAQG,IASJ,2BCnBCU,G,MAAe,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,WAEhC,OAAO,qBAAKL,UAAU,4BAAf,SACK,wBAAOA,UAAWI,EAAKE,SAAW,gBAAaC,EAA/C,UACI,uBAAOZ,KAAK,WACLa,QAASJ,EAAKE,SACdT,SAAU,kBAAMQ,EAAWD,IAC3BJ,UAAU,uBAEhBI,EAAKK,YCTbC,EAAW,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,MAAON,EAAgC,EAAhCA,WAC9B,OACI,6BACKM,EAAMC,KAAI,SAAAR,GACP,OACA,cAAC,EAAD,CAEIA,KAAMA,EACNC,WAAYA,GAFPD,EAAKK,YCTxBI,G,MAA4B,CAChC,CAAEJ,KAAM,eAAgBH,UAAU,GAClC,CAAEG,KAAM,YAAaH,UAAU,KAuClBQ,EApCH,WAAO,IAAD,EACUvB,WAAesB,GADzB,mBACTF,EADS,KACFI,EADE,KAuBhB,OACE,cAAC,WAAD,UACE,sBAAKf,UAAU,QAAf,UACE,gDACA,cAAC,EAAD,CAAUW,MAAOA,EAAON,WAxBC,SAAAW,GAG7B,IAAMC,EAAWN,EAAMC,KAAI,SAACR,GAC1B,OAAIA,IAASY,EACJ,2BACFZ,GADL,IAEEE,UAAWF,EAAKE,WAGbF,KAETW,EAASE,MAaL,cAAC,EAAD,CAAa3B,QAVM,SAAAG,GACJ,KAAnBA,EAAQyB,QACNH,EAAS,GAAD,mBAAKJ,GAAL,CAAY,CAACF,KAAMhB,EAASa,UAAU,eC1BpDa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.644bdfa3.chunk.js","sourcesContent":["import React, {ChangeEvent, FormEvent } from \"react\";\r\nimport './AddTodoForm.css';\r\n\r\ninterface AddTodoFormProps {\r\n    addTodo: AddTodo;\r\n}\r\n\r\nexport const AddTodoForm = ({addTodo}: AddTodoFormProps) => {\r\n\r\n    const [newTodo, setNewTodo] = React.useState(\"\");\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewTodo(e.target.value)\r\n    }\r\n\r\n    /*Let's to add new task */\r\n    const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        addTodo(newTodo);\r\n    }\r\n    return (\r\n        <form>\r\n            <input type=\"text\" \r\n                   value={newTodo} \r\n                   onChange={handleChange}\r\n                   \r\n            />\r\n            <button className=\"but\" type=\"submit\" onClick={handleSubmit}>Add Todo</button>\r\n        </form>\r\n    )\r\n}","//import React, {FC} from 'react';\r\nimport './TodoListItem.css';\r\n\r\ninterface TodoListItemProps {\r\n    todo: Todo;\r\n    toggleTodo: ToggleTodo;\r\n}\r\n\r\nexport const TodoListItem = ({todo, toggleTodo}: TodoListItemProps) => {\r\n    \r\n    return <div className=\"d-flex align-items-center\">\r\n                <label className={todo.complete ? \"complete\" : undefined}>\r\n                    <input type=\"checkbox\" \r\n                           checked={todo.complete}\r\n                           onChange={() => toggleTodo(todo)}\r\n                           className=\"option-input radio\"\r\n                            />\r\n                    {todo.text}\r\n                </label>\r\n            </div>\r\n}","import * as React from \"react\";\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\ninterface TodoListProps {\r\n    todos: Array<Todo>;\r\n    toggleTodo: ToggleTodo;\r\n}\r\n\r\nexport const TodoList = ({ todos, toggleTodo }: TodoListProps) => {\r\n    return (\r\n        <ul>\r\n            {todos.map(todo => {\r\n                return (\r\n                <TodoListItem \r\n                    key={todo.text} \r\n                    todo={todo} \r\n                    toggleTodo={toggleTodo} \r\n                />)\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n","import  * as React from 'react';\nimport { AddTodoForm } from './AddTodoForm';\nimport { TodoList } from './TodoList';\nimport './App.css';\n\nconst initialTodos: Array<Todo> = [\n  { text: \"Walk the dog\", complete: false },\n  { text: \"Write app\", complete: false }\n];\n\nconst App = () => {\n  const [todos, setTodos] = React.useState(initialTodos);\n\n  const toggleTodo: ToggleTodo = selectedTodo => {\n\n\n    const newTodos = todos.map((todo: Todo) => {\n      if (todo === selectedTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete\n        }\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  }\n\n  const addTodo: AddTodo = newTodo => {\n    newTodo.trim() !== \"\" &&    /* disable ability to add empty tasks */\n      setTodos([...todos, {text: newTodo, complete: false}])\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"whole\">\n        <h1>To Do List App</h1>\n        <TodoList todos={todos} toggleTodo={toggleTodo}/>\n        <AddTodoForm addTodo={addTodo}/>\n      </div>\n      \n    </React.Fragment>\n    \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); "],"sourceRoot":""}