{"version":3,"sources":["TodoListItem.tsx","App.tsx","index.tsx"],"names":["TodoListItem","todo","toggleTodo","className","complete","undefined","type","checked","onChange","text","initialTodos","App","React","todos","setTodos","selectedTodo","newTodos","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAQaA,G,MAAe,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,WAEhC,OAAO,6BACK,wBAAOC,UAAWF,EAAKG,SAAW,gBAAaC,EAA/C,UACI,uBAAOC,KAAK,WACLC,QAASN,EAAKG,SACdI,SAAU,kBAAMN,EAAWD,MAEjCA,EAAKQ,YCZpBC,EAA4B,CAChC,CAAED,KAAM,eAAgBL,UAAU,GAClC,CAAEK,KAAM,YAAaL,UAAU,IA2BlBO,EAxBH,WAAO,IAAD,EACUC,WAAeF,GADzB,mBACTG,EADS,KACFC,EADE,KAGVZ,EAAyB,SAAAa,GAC7B,IAAMC,EAAWH,EAAMI,KAAI,SAAChB,GAC1B,OAAIA,IAASc,EACJ,2BACFd,GADL,IAEEG,UAAWH,EAAKG,WAGbH,KAETa,EAASE,IAEX,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CAAcf,KAAMY,EAAM,GAAIX,WAAYA,IAC1C,cAAC,EAAD,CAAcD,KAAMY,EAAM,GAAIX,WAAYA,QCvBhDgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7239c7a5.chunk.js","sourcesContent":["//import React, {FC} from 'react';\r\nimport './TodoListItem.css';\r\n\r\ninterface TodoListItemProps {\r\n    todo: Todo;\r\n    toggleTodo: ToggleTodo;\r\n}\r\n\r\nexport const TodoListItem = ({todo, toggleTodo}: TodoListItemProps) => {\r\n    \r\n    return <li>\r\n                <label className={todo.complete ? \"complete\" : undefined}>\r\n                    <input type=\"checkbox\" \r\n                           checked={todo.complete}\r\n                           onChange={() => toggleTodo(todo)}\r\n                            />\r\n                    {todo.text}\r\n                </label>\r\n            </li>\r\n}","import  * as React from 'react';\nimport { TodoListItem } from './TodoListItem';\n//import { Todo } from './types';    // don't need since types are in d.ts\n\nconst initialTodos: Array<Todo> = [\n  { text: \"Walk the dog\", complete: false },\n  { text: \"Write app\", complete: false }\n];\n\nconst App = () => {\n  const [todos, setTodos] = React.useState(initialTodos);\n\n  const toggleTodo: ToggleTodo = selectedTodo => {\n    const newTodos = todos.map((todo: Todo) => {\n      if (todo === selectedTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete\n        }\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  }\n  return (\n    <React.Fragment>\n      <TodoListItem todo={todos[0]} toggleTodo={toggleTodo}/>\n      <TodoListItem todo={todos[1]} toggleTodo={toggleTodo}/>\n    </React.Fragment>\n    \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); "],"sourceRoot":""}